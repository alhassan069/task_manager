---
description: 
globs: 
alwaysApply: true
---
Great — let’s walk through a **detailed user journey** for the NLP Task Manager app based on your goals, architecture, and UI design. This will ensure both developers and designers understand how the user flows through the product, what interactions are expected, and where parsing, storage, and UI feedback come into play.

---

## 🧭 User Journey: NLP Task Manager

---

### 🔰 1. **Landing Page (Unauthenticated)**

* **User sees** a clean, professional landing page with:

  * App headline and subheading (benefit-oriented)
  * CTA: "Login" and "Get Started"
  * Hero section explaining natural language input
  * Brief UI screenshots or illustrations (optional)
* **Goal**: Encourage user to login or sign up

---

### 🔐 2. **Authentication Flow**

#### ➤ If user clicks “Login”:

* They're taken to a login form (email & password)
* On success:

  * JWT token is issued
  * User is redirected to **Dashboard**

#### ➤ If user clicks “Get Started”:

* They're taken to a registration form (email, password, name)
* On success:

  * JWT token is issued
  * User is redirected to **Login**

---

### 🧱 3. **Dashboard / Project Home**

* User sees:

  * Navbar with app name, “+ New Project” button
  * Empty state message if no projects exist
* **Action**: Click “+ New Project”

  * Enter: Project name
  * On creation:

    * Project card/list item appears
    * User is redirected to the **Project View**

---

### 📁 4. **Inside a Project**

#### ✅ Key UI Areas

* “+ Add Task” input field (accepts natural language)
* Task table below with columns:

  * Task name
  * Assignee
  * Due Date/Time
  * Priority
  * \[✓] Completed toggle
  * \[✏️] Inline edit

#### ➤ User Adds a Task

**Example input**:

> `Finish landing page Aman by 11pm 20th June P2`

* Backend sends input to OpenAI API (GPT-4-turbo)
* Extracted:

  * Task name: `Finish landing page`
  * Assignee: `Aman` (must be a registered user in the project)
  * Due date: `20th June 11pm`
  * Priority: `P2`
* Fallbacks:

  * If no due date → "No due date"
  * If no priority → Default `P3`
  * If assignee is missing or unrecognized → Assign self

Parsed task is saved and shown in the task list instantly.

---

### 🛠 5. **Editing / Managing Tasks**

* Hovering or clicking a field (task name, assignee, date, priority) allows **inline editing**
* Clicking delete icon prompts: **"Are you sure you want to delete this task?"**
* Tasks are stored and rendered in order of **due date**
* Completed tasks can be marked with a checkbox (strike-through on UI)

---

### 🔎 6. **Searching & Filtering**

* User can:

  * Search tasks by name or assignee
  * Filter by priority, due date
* Filters are visible above task list

---

### 👥 7. **Collaborative Use**

* When creating or editing a project, user can invite other registered users
* Collaborators:

  * Can view the project
  * Can see all tasks and edit them
  * **Cannot** create/delete tasks

---

### 👤 8. **User Profile & Logout**

* From top-right dropdown:

  * View basic profile info (email, name)
  * Logout
* No settings page or password change feature (MVP constraint)

---

### 📲 9. **Fallback/Error States**

* Invalid login → “Email or password incorrect”
* Invalid assignee (non-user) → "User not found"
* NLP parsing fails → "Couldn't understand input. Please try again."
* Network/API errors → "Something went wrong. Try later."

---

### 🏁 10. **End of Journey**

At any time, users can:

* View all projects they've created
* Enter any project and manage tasks
* Logout safely

---
### ⚙️ Backend Touchpoints Summary

| Step           | API Involved                     | Description                 |
| -------------- | -------------------------------- | --------------------------- |
| Login/Register | `/login` / `/register`           | Auth + JWT                  |
| Create Project | `/projects`                      | Creates and stores metadata |
| NLP Task Add   | `/tasks`                         | Parses + creates task       |
| Edit Task      | `/tasks/:id` (PATCH)             | Update individual fields    |
| Delete Task    | `/tasks/:id` (DELETE)            | Confirm and delete          |
| Invite User    | `/projects/:id/invite`           | Share read-only access      |

---
